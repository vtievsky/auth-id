openapi: 3.0.1
info:
  contact: {}
  description: Методы для работы с API вебхуков
  title: auth-id API
  version: "1.0"
servers:
  - url: /
tags:
  - name: web
    description: Используются для фронтенда
paths:
  /v1/users:
    get:
      tags:
        - web
      description: Получение списка пользователей
      operationId: GetUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUsersResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUsersResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    post:
      tags:
        - web
      description: Создание пользователя
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
        description: Параметры запроса
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse500"
          description: Internal Server Error
      security:
        - bearer: []
  /v1/users/{login}:
    get:
      tags:
        - web
      description: Получение данных пользователя
      operationId: GetUser
      parameters:
        - name: login
          description: Логин пользователя
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    put:
      tags:
        - web
      description: Изменение пользователя
      operationId: UpdateUser
      parameters:
        - name: login
          description: Логин изменяемого пользователя
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
        description: Параметры запроса
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateUserResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateUserResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    delete:
      tags:
        - web
      description: Удаление пользователя
      operationId: DeleteUser
      parameters:
        - name: login
          description: Логин удаляемого пользователя
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserResponse500"
          description: Internal Server Error
      security:
        - bearer: []
  /v1/users/{login}/roles:
    get:
      tags:
        - web
      description: Получение ролей пользователя
      operationId: GetUserRoles
      parameters:
        - name: login
          description: Логин пользователя
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserRolesResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserRolesResponse500"
          description: Internal Server Error
      security:
        - bearer: []
  /v1/roles:
    get:
      tags:
        - web
      description: Получение списка ролей
      operationId: GetRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRolesResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRolesResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    post:
      tags:
        - web
      description: Создание роли
      operationId: CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoleRequest"
        description: Параметры запроса
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRoleResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRoleResponse500"
          description: Internal Server Error
      security:
        - bearer: []
  /v1/roles/{code}:
    get:
      tags:
        - web
      description: Получение данных роли
      operationId: GetRole
      parameters:
        - name: code
          description: Код роли
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoleResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoleResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    put:
      tags:
        - web
      description: Изменение роли
      operationId: UpdateRole
      parameters:
        - name: code
          description: Код изменяемой роли
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRoleRequest"
        description: Параметры запроса
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRoleResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRoleResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    delete:
      tags:
        - web
      description: Удаление роли
      operationId: DeleteRole
      parameters:
        - name: code
          description: Код удаляемой роли
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRoleResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRoleResponse500"
          description: Internal Server Error
      security:
        - bearer: []
  /v1/roles/{code}/users:
    get:
      tags:
        - web
      description: Получение пользователей роли
      operationId: GetRoleUsers
      parameters:
        - name: code
          description: Код роли
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoleUsersResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoleUsersResponse500"
          description: Internal Server Error
      security:
        - bearer: []
  /v1/roles/{code}/privileges:
    get:
      tags:
        - web
      description: Получение привилегий роли
      operationId: GetRolePrivileges
      parameters:
        - name: code
          description: Код роли
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRolePrivilegesResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRolePrivilegesResponse500"
          description: Internal Server Error
      security:
        - bearer: []
  /v1/roles/{role_code}/privileges/{privilege_code}:
    post:
      tags:
        - web
      description: Добавление привилегии роли
      operationId: AddRolePrivilege
      parameters:
        - name: role_code
          description: Код роли
          in: path
          schema:
            type: string
          required: true
        - name: privilege_code
          description: Код привилегии
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddRolePrivilegeRequest"
        description: Параметры запроса
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddRolePrivilegeResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddRolePrivilegeResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    put:
      tags:
        - web
      description: Изменение привилегии роли
      operationId: UpdateRolePrivilege
      parameters:
        - name: role_code
          description: Код роли
          in: path
          schema:
            type: string
          required: true
        - name: privilege_code
          description: Код привилегии
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRolePrivilegeRequest"
        description: Параметры запроса
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRolePrivilegeResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRolePrivilegeResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    delete:
      tags:
        - web
      description: Удаление привилегии роли
      operationId: DeleteRolePrivilege
      parameters:
        - name: role_code
          description: Код роли
          in: path
          schema:
            type: string
          required: true
        - name: privilege_code
          description: Код привилегии
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRolePrivilegeResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRolePrivilegeResponse500"
          description: Internal Server Error
      security:
        - bearer: []
  /v1/roles/{role_code}/users/{login}:
    post:
      tags:
        - web
      description: Добавление роли пользователю
      operationId: AddRoleUser
      parameters:
        - name: role_code
          description: Код роли
          in: path
          schema:
            type: string
          required: true
        - name: login
          description: Логин пользователя
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddRoleUserRequest"
        description: Параметры запроса
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddRoleUserResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddRoleUserResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    put:
      tags:
        - web
      description: Изменение роли пользователя
      operationId: UpdateRoleUser
      parameters:
        - name: role_code
          description: Код роли
          in: path
          schema:
            type: string
          required: true
        - name: login
          description: Логин пользователя
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRoleUserRequest"
        description: Параметры запроса
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRoleUserResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRoleUserResponse500"
          description: Internal Server Error
      security:
        - bearer: []
    delete:
      tags:
        - web
      description: Удаление роли пользователя
      operationId: DeleteRoleUser
      parameters:
        - name: role_code
          description: Код роли
          in: path
          schema:
            type: string
          required: true
        - name: login
          description: Логин пользователя
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRoleUserResponse200"
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRoleUserResponse500"
          description: Internal Server Error
      security:
        - bearer: []
components:
  schemas:
    ResponseStatusOk:
      type: object
      properties:
        code:
          type: string
          enum:
            - ok
        description:
          type: string
      required:
        - code
        - description
    ResponseStatusError:
      type: object
      properties:
        code:
          type: string
          enum:
            - error
        description:
          type: string
      required:
        - code
        - description
    GetUsersResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: array
          items:
            $ref: "#/components/schemas/User"
      required:
        - status
        - data
    GetUsersResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    User:
      type: object
      properties:
        name:
          type: string
        login:
          type: string
        blocked:
          type: boolean
      required:
        - name
        - login
        - blocked
    GetUserResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: object
          $ref: "#/components/schemas/User"
      required:
        - status
        - data
    GetUserResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: Полное имя пользователя
        login:
          type: string
          description: login пользователя
        blocked:
          type: boolean
          default: true
      required:
        - name
        - login
        - blocked
    CreateUserResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: object
          $ref: "#/components/schemas/User"
      required:
        - status
        - data
    CreateUserResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: Полное имя пользователя
        blocked:
          type: boolean
      required:
        - name
        - blocked
    UpdateUserResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: object
          $ref: "#/components/schemas/User"
      required:
        - status
        - data
    UpdateUserResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    DeleteUserResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
      required:
        - status
    DeleteUserResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    GetRolesResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Role"
      required:
        - status
        - data
    GetRolesResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    Role:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
        blocked:
          type: boolean
      required:
        - code
        - name
        - description
        - blocked
    RolePrivilege:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
        allowed:
          type: boolean
      required:
        - code
        - name
        - description
        - allowed
    RoleUser:
      type: object
      properties:
        name:
          type: string
        login:
          type: string
        date_in:
          type: string
          format: date
          pattern: "YYYY-MM-DD"
          example: "2017-01-01"
        date_out:
          type: string
          format: date
          pattern: "YYYY-MM-DD"
          example: "2017-01-01"
      required:
        - name
        - login
        - date_in
        - date_out
    UserRole:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
        date_in:
          type: string
          format: date
          pattern: "YYYY-MM-DD"
          example: "2017-01-01"
        date_out:
          type: string
          format: date
          pattern: "YYYY-MM-DD"
          example: "2017-01-01"
      required:
        - code
        - name
        - description
        - date_in
        - date_out
    GetRoleResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: object
          $ref: "#/components/schemas/Role"
      required:
        - status
        - data
    GetRoleResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    CreateRoleRequest:
      type: object
      properties:
        name:
          type: string
          description: Название роли
        description:
          type: string
          description: Описание роли
        blocked:
          type: boolean
          default: true
      required:
        - name
        - description
        - blocked
    CreateRoleResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: object
          $ref: "#/components/schemas/Role"
      required:
        - status
        - data
    CreateRoleResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    UpdateRoleRequest:
      type: object
      properties:
        name:
          type: string
          description: Название роли
        description:
          type: string
          description: Описание роли
        blocked:
          type: boolean
      required:
        - name
        - description
        - blocked
    UpdateRoleResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: object
          $ref: "#/components/schemas/Role"
      required:
        - status
        - data
    UpdateRoleResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    DeleteRoleResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
      required:
        - status
    DeleteRoleResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    GetRolePrivilegesResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: array
          items:
            $ref: "#/components/schemas/RolePrivilege"
      required:
        - status
        - data
    GetRolePrivilegesResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    GetRoleUsersResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: array
          items:
            $ref: "#/components/schemas/RoleUser"
      required:
        - status
        - data
    GetRoleUsersResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    GetUserRolesResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
        data:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
      required:
        - status
        - data
    GetUserRolesResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    AddRolePrivilegeRequest:
      type: object
      properties:
        allowed:
          type: boolean
          default: true
      required:
        - allowed
    AddRolePrivilegeResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
      required:
        - status
    AddRolePrivilegeResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    UpdateRolePrivilegeRequest:
      type: object
      properties:
        allowed:
          type: boolean
      required:
        - allowed
    UpdateRolePrivilegeResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
      required:
        - status
    UpdateRolePrivilegeResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    DeleteRolePrivilegeResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
      required:
        - status
    DeleteRolePrivilegeResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    AddRoleUserRequest:
      type: object
      properties:
        date_in:
          type: string
          format: date
          pattern: "YYYY-MM-DD"
          example: "2017-01-01"
        date_out:
          type: string
          format: date
          pattern: "YYYY-MM-DD"
          example: "2017-01-01"
      required:
        - date_in
        - date_out
    AddRoleUserResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
      required:
        - status
    AddRoleUserResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    UpdateRoleUserRequest:
      type: object
      properties:
        date_in:
          type: string
          format: date
          pattern: "YYYY-MM-DD"
          example: "2017-01-01"
        date_out:
          type: string
          format: date
          pattern: "YYYY-MM-DD"
          example: "2017-01-01"
      required:
        - date_in
        - date_out
    UpdateRoleUserResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
      required:
        - status
    UpdateRoleUserResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
    DeleteRoleUserResponse200:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusOk"
      required:
        - status
    DeleteRoleUserResponse500:
      type: object
      properties:
        status:
          type: object
          $ref: "#/components/schemas/ResponseStatusError"
      required:
        - status
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
